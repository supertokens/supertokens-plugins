name: Release Private Packages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Release branch"
        required: false
        default: "main"
        type: string
      skip_tests:
        description: "Skip tests"
        required: false
        default: false
        type: boolean
      tag:
        description: "NPM tag for release (e.g., beta, alpha, rc)"
        required: false
        default: "beta"
        type: string

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    environment: private-npm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Check for changes to release
        id: check-changes
        run: |
          CHANGESET_COUNT=$(find .changeset -type f -name '*.md' ! -name 'README.md' | wc -l)
          if [ "$CHANGESET_COUNT" -eq 0 ]; then
            echo "No changesets found. Nothing to release."
            echo "has-changes=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "Found $CHANGESET_COUNT changeset(s) to release."
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create beta branch
        id: create-branch
        run: |
          DATETIME=$(date +%Y%m%d%H%M%S)
          BRANCH_NAME="beta-$DATETIME"
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
          echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Create snapshot version
        run: npx changeset version --snapshot ${{ inputs.tag }}

      - name: Run tests
        if: ${{ inputs.skip_tests == false }}
        run: npm test

      - name: build
        run: npm run build

      - name: Publish to npm
        run: npx changeset publish --tag ${{ inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
